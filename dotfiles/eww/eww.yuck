;; Volume notification widget
(defwidget volume-notification []
  (eventbox :onhover "${EWW_CMD} update volume_reveal=true"
            :onhoverlost "${EWW_CMD} update volume_reveal=false"
    (box :class "notification-container"
         :orientation "v"
         :space-evenly false
      (revealer :transition "slidedown"
                :reveal volume_reveal
                :duration "200ms"
        (box :class "notification-content"
             :orientation "h"
             :space-evenly false
             :spacing 12
          (label :class "notification-icon"
                 :text "󰕾")
          (box :orientation "v"
               :space-evenly false
               :spacing 4
            (label :class "notification-title"
                   :text "Volume")
            (scale :class "notification-scale"
                   :value volume_value
                   :min 0
                   :max 100
                   :orientation "h"
                   :onchange "amixer set Master {}%")
            (label :class "notification-value"
                   :text "${volume_value}%")))))))

;; Brightness notification widget  
(defwidget brightness-notification []
  (eventbox :onhover "${EWW_CMD} update brightness_reveal=true"
            :onhoverlost "${EWW_CMD} update brightness_reveal=false"
    (box :class "notification-container"
         :orientation "v"
         :space-evenly false
      (revealer :transition "slidedown"
                :reveal brightness_reveal
                :duration "200ms"
        (box :class "notification-content"
             :orientation "h"
             :space-evenly false
             :spacing 12
          (label :class "notification-icon"
                 :text "󰃠")
          (box :orientation "v"
               :space-evenly false
               :spacing 4
            (label :class "notification-title"
                   :text "Brightness")
            (scale :class "notification-scale"
                   :value brightness_value
                   :min 0
                   :max 100
                   :orientation "h"
                   :onchange "brightnessctl set {}%")
            (label :class "notification-value"
                   :text "${brightness_value}%")))))))

;; Variables
(defvar volume_reveal false)
(defvar brightness_reveal false)

;; Polling variables
(defpoll volume_value :interval "1s" :initial "50"
  "amixer get Master | grep -oP '\\d+(?=%)' | head -1")

(defpoll brightness_value :interval "1s" :initial "50"
  "brightnessctl g | awk '{printf \"%.0f\", ($1/$(brightnessctl m))*100}'")

;; Windows
(defwindow volume-notification
  :geometry (geometry :x "0%"
                      :y "50px"
                      :width "300px"
                      :height "80px"
                      :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "0px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (volume-notification))

(defwindow brightness-notification
  :geometry (geometry :x "0%"
                      :y "140px"
                      :width "300px"
                      :height "80px"
                      :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "0px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (brightness-notification))